@use '../variables/colors' as c;
@use '../variables/breakpoints' as bp;


.navbar {

	position: sticky;
	top: 0;

	display: flex;
	gap: 1.5rem;
	flex-direction: row;
	align-items: center;
	flex-wrap: wrap;
	z-index: 999;

	padding: .5rem 1rem;
	margin-block-end: 1.5rem;

	background-color: c.clr('accent', 'dark');
	box-shadow: 0 0 0.5rem rgb(black, 0.7);
	color: c.clr('accent', 'light');

	a {
		color: inherit;
		text-decoration: none;
	}


	.logo {
		font-size: 2em;

		+ .title { margin-inline-start: -0.5rem; }
	}

	.title {
		font-size: 1.4em;
		font-family: Helmet Neue;

		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 0.5rem;

		.icon { height: 1.5em; }
	}

	.space { flex-grow: 1; }
	.btns {
		display: flex !important;
		flex-direction: row;
		align-items: center;
		gap: 1rem;
	}


	.links {
		flex-grow: 1;
		margin: 0;
		padding: 0;
		list-style: none;
		display: flex;
		gap: 1.5rem;
		flex-direction: row;
		align-items: center;

		@include bp.mq-min('medium') {
			> *:not(.space, .btns) {
				position: relative;
				font-variation-settings: 'wght' 600;
				opacity: 0.8;
				transition: opacity 0.2s ease;

				&::after {
					content: '';
					position: absolute;
					inset-inline-start: 0;
					inset-block-end: -5px;
					height: 2px;
					width: 1rem;
					max-width: 100%;
					background-color: currentColor;
					transform-origin: left;
					transform: scaleX(0);
					transition: transform 0.2s ease;
				}

				&:hover {
					opacity: 1;

					&::after { transform: scaleX(1); }
				}
			}
		}

		@include bp.mq-max('medium') {
			position: absolute;
			inset-block-start: 100%;
			inset-inline: 0;

			flex-direction: column;
			align-items: stretch;
			gap: 0;

			background-color: c.clr('accent', 'dark');

			overflow-y: hidden;
			transition: max-height 0.2s ease;
			max-height: 0;

			&.open { box-shadow: 0 0.5rem 0.5rem -0.5rem rgb(black, 0.7); }

			:not(.btns) a, .btns {
				display: block;
				padding: 0.8rem 1rem;
			}

			> a:last-child,
			:last-child:not(.btns) a,
			.btns:last-child {
				padding-block-end: 1rem;
			}

			.space { display: none; }
			.btns.col { flex-direction: column; }
		}
	}

	.toggler {
		height: 2em;
		min-width: 2em;
		margin-inline-start: auto;
		display: none;

		background: none;
		font-size: 1em;
		color: c.clrl('accent', 'dark');
		border: none;

		align-items: center;
		justify-content: center;

		cursor: pointer;

		@include bp.mq-max('medium') { display: flex; }

		&:not(.borderless) {
			border: 1px solid c.clrl('accent', 'dark');
			border-radius: 0.4rem;
		}

		// complex selector, to be simply overridable:
		//   - it's simple to use own Font Awesome icon
		//   - it's simple to use own content with .empty
		:where(&:not(.empty))::before {
			content: '\f0c9';
			font-family: 'Font Awesome 6 Free';
			font-weight: 900;
		}
	}

	.hamburger {
		--color: currentColor;
		display: block;
		position: relative;
		width: 1.25em;
		height: 0.125em;
		background-color: var(--color);
		transition: background-color 0.2s ease;

		&::before,
		&::after {
			content: '';
			position: absolute;
			inset: 0;
			background-color: var(--color);
			transition: transform 0.2s ease;
		}

		&::before { transform: translateY(-300%); }
		&::after { transform: translateY(300%); }
	}

	.toggler.open > .hamburger {
		background-color: transparent;
		&::before { transform: rotate(45deg); }
		&::after { transform: rotate(-45deg); }
	}

}
